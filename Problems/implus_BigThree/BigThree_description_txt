Description:
There are n balls. They are arranged in a row. Each ball has a color (for convenience an integer) and an integer value. The color value of the i-th ball is ci and the value of the i-th ball is vi.

Wang Dachui chooses some balls and makes a new sequence without changing the relative order of the balls. She wants to maximize the value of this sequence.

The value of the sequence is defined as the sum of following values for each ball (where a and b are given constants):

If the ball is not in the beginning of the sequence and the distance between color value of this ball and the previous ball's is less than 2 (here the distance between color value c0 and color value c1 means abs(c0 - c1)), add (the value of the ball)  ×  a.
Otherwise, add (the value of the ball)  ×  b.
You are given q queries. Each query contains two integers ai and bi. For each query find the maximal value of the sequence she can make when a = ai and b = bi.

Note that the new sequence can be empty, and the value of an empty sequence is defined as zero.



Input:
Multiple cases, end with EOF.
The first line contains two integers n and q (1 ≤ n ≤ 10^5; 1 ≤ q ≤ 100). The second line contains n integers: v1, v2, ..., vn (|vi| ≤ 10^5). The third line contains n integers: c1, c2, ..., cn (1 ≤ ci ≤ n).

The following q lines contain the values of the constants a and b for queries. The i-th of these lines contains two integers ai and bi (|ai|, |bi| ≤ 105).

In each line integers are separated by single spaces.



Output:
For each query, output a line containing an integer — the answer to the query. The i-th line contains the answer to the i-th query in the input order.


Sample Input:
6 3
1 -2 3 4 0 -1
1 2 1 2 1 1
5 1
-2 1
1 0

4 1
-3 6 -1 2
1 2 3 1
1 -1

Sample Output:
36
7
7
11

